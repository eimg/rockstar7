{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/eimg/Desktop/rockstar7/TodoNative/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { AppLoading } from 'expo';\nimport { Container, Header, Text, Left, Right, Center } from 'native-base';\nimport * as Font from 'expo-font';\n\nvar App = function App(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ready = _useState2[0],\n      setReady = _useState2[1];\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({\n              Roboto: require('native-base/Fonts/Roboto.ttf'),\n              Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf')\n            }, Ionicons.font)));\n\n          case 2:\n            setReady(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  if (ready) {\n    return React.createElement(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, \"Native Base\"));\n  } else {\n    return React.createElement(AppLoading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 4\n      }\n    });\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/eimg/Desktop/rockstar7/TodoNative/App.js"],"names":["React","useState","useEffect","AppLoading","Container","Header","Text","Left","Right","Center","Font","App","props","ready","setReady","loadAsync","Roboto","require","Roboto_medium","Ionicons","font"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,SACCC,SADD,EAECC,MAFD,EAGCC,IAHD,EAICC,IAJD,EAKCC,KALD,EAMCC,MAND,QAOO,aAPP;AASA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAAA,kBAEIX,QAAQ,CAAC,KAAD,CAFZ;AAAA;AAAA,MAEfY,KAFe;AAAA,MAERC,QAFQ;;AAIpBZ,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACHQ,IAAI,CAACK,SAAL;AACLC,cAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CADV;AAELC,cAAAA,aAAa,EAAED,OAAO,CAAC,qCAAD;AAFjB,eAGFE,QAAQ,CAACC,IAHP,EADG;;AAAA;AAOTN,YAAAA,QAAQ,CAAC,IAAD,CAAR;;AAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAQN,EARM,CAAT;;AAUA,MAAGD,KAAH,EAAU;AAET,WACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,CADD;AAMA,GARD,MAQO;AAEN,WACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAIA;AACD,CA7BD;;AA+BA,eAAeF,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AppLoading } from 'expo';\n\nimport {\n\tContainer,\n\tHeader,\n\tText,\n\tLeft,\n\tRight,\n\tCenter\n} from 'native-base';\n\nimport * as Font from 'expo-font';\n\nconst App = props => {\n\n\tlet [ready, setReady] = useState(false);\n\n\tuseEffect(async () => {\n\t\tawait Font.loadAsync({\n\t\t\tRoboto: require('native-base/Fonts/Roboto.ttf'),\n\t\t\tRoboto_medium: require('native-base/Fonts/Roboto_medium.ttf'),\n\t\t\t...Ionicons.font,\n\t\t});\n\n\t\tsetReady(true);\n\t}, []);\n\n\tif(ready) {\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Text>Native Base</Text>\n\t\t\t</Container>\n\t\t);\n\n\t} else {\n\n\t\treturn (\n\t\t\t<AppLoading />\n\t\t);\n\n\t}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}